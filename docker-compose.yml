version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: matcha-db
    environment:
      POSTGRES_DB: matcha_db
      POSTGRES_USER: matcha_user
      POSTGRES_PASSWORD: matcha_password
    ports:
      - "5433:5432"  # Port externe 5433 pour éviter le conflit
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U matcha_user -d matcha_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Express.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: matcha-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://matcha_user:matcha_password@postgres:5432/matcha_db
      - JWT_SECRET=your-super-secret-jwt-key-for-development-only
      - PORT=3001
      - FRONTEND_URL=http://localhost:5173
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: matcha-frontend
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001/api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

  # Adminer pour gérer la base de données
  adminer:
    image: adminer:4.8.1
    container_name: matcha-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data: 